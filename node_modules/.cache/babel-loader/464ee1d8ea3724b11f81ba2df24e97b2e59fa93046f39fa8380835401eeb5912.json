{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport const useThemeDetector = () => {\n  _s();\n  const [isDark, setIsDark] = useState(false);\n  useEffect(() => {\n    const checkTheme = async () => {\n      try {\n        const [tab] = await chrome.tabs.query({\n          active: true,\n          currentWindow: true\n        });\n        if (tab.id) {\n          const [{\n            result\n          }] = await chrome.scripting.executeScript({\n            target: {\n              tabId: tab.id\n            },\n            func: () => {\n              const html = document.documentElement;\n              return html.getAttribute('dark') === 'true' || html.hasAttribute('dark') || document.body.classList.contains('dark-theme');\n            }\n          });\n          setIsDark(result);\n        }\n      } catch (error) {\n        console.error('Error detecting theme:', error);\n        setIsDark(false);\n      }\n    };\n    checkTheme();\n  }, []);\n  return isDark;\n};\n_s(useThemeDetector, \"q9ovQTvwIdpxeVii6kJLTuTYpwE=\");","map":{"version":3,"names":["useState","useEffect","useThemeDetector","_s","isDark","setIsDark","checkTheme","tab","chrome","tabs","query","active","currentWindow","id","result","scripting","executeScript","target","tabId","func","html","document","documentElement","getAttribute","hasAttribute","body","classList","contains","error","console"],"sources":["C:/Users/ADAM/YT-adskip/YT-adskip-extension/src/utils/useThemeDetector.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport const useThemeDetector = (): boolean => {\r\n  const [isDark, setIsDark] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkTheme = async () => {\r\n      try {\r\n        const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });\r\n        if (tab.id) {\r\n          const [{ result }] = await chrome.scripting.executeScript({\r\n            target: { tabId: tab.id },\r\n            func: () => {\r\n              const html = document.documentElement;\r\n              return html.getAttribute('dark') === 'true' || \r\n                     html.hasAttribute('dark') ||\r\n                     document.body.classList.contains('dark-theme');\r\n            },\r\n          });\r\n          setIsDark(result);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error detecting theme:', error);\r\n        setIsDark(false);\r\n      }\r\n    };\r\n\r\n    checkTheme();\r\n  }, []);\r\n\r\n  return isDark;\r\n}; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAe;EAAAC,EAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAM,CAACC,GAAG,CAAC,GAAG,MAAMC,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC;UAAEC,MAAM,EAAE,IAAI;UAAEC,aAAa,EAAE;QAAK,CAAC,CAAC;QAC5E,IAAIL,GAAG,CAACM,EAAE,EAAE;UACV,MAAM,CAAC;YAAEC;UAAO,CAAC,CAAC,GAAG,MAAMN,MAAM,CAACO,SAAS,CAACC,aAAa,CAAC;YACxDC,MAAM,EAAE;cAAEC,KAAK,EAAEX,GAAG,CAACM;YAAG,CAAC;YACzBM,IAAI,EAAEA,CAAA,KAAM;cACV,MAAMC,IAAI,GAAGC,QAAQ,CAACC,eAAe;cACrC,OAAOF,IAAI,CAACG,YAAY,CAAC,MAAM,CAAC,KAAK,MAAM,IACpCH,IAAI,CAACI,YAAY,CAAC,MAAM,CAAC,IACzBH,QAAQ,CAACI,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,YAAY,CAAC;YACvD;UACF,CAAC,CAAC;UACFtB,SAAS,CAACS,MAAM,CAAC;QACnB;MACF,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CvB,SAAS,CAAC,KAAK,CAAC;MAClB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,MAAM;AACf,CAAC;AAACD,EAAA,CA7BWD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}