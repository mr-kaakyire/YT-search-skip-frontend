{"ast":null,"code":"const CACHE_PREFIX = 'yt-adskip-cache-';\nconst CACHE_TTL = 24 * 60 * 60 * 1000; // 24 hours in milliseconds\n\nexport const cacheService = {\n  get: videoId => {\n    try {\n      const cacheKey = CACHE_PREFIX + videoId;\n      const cachedData = localStorage.getItem(cacheKey);\n      if (!cachedData) return null;\n      const entry = JSON.parse(cachedData);\n      const now = Date.now();\n\n      // Check if cache is expired\n      if (now - entry.timestamp > CACHE_TTL) {\n        localStorage.removeItem(cacheKey);\n        return null;\n      }\n      return entry.data;\n    } catch (error) {\n      console.error('Cache read error:', error);\n      return null;\n    }\n  },\n  set: (videoId, data) => {\n    try {\n      const cacheKey = CACHE_PREFIX + videoId;\n      const entry = {\n        data,\n        timestamp: Date.now()\n      };\n      localStorage.setItem(cacheKey, JSON.stringify(entry));\n    } catch (error) {\n      console.error('Cache write error:', error);\n    }\n  },\n  clear: videoId => {\n    try {\n      const cacheKey = CACHE_PREFIX + videoId;\n      localStorage.removeItem(cacheKey);\n    } catch (error) {\n      console.error('Cache clear error:', error);\n    }\n  }\n};","map":{"version":3,"names":["CACHE_PREFIX","CACHE_TTL","cacheService","get","videoId","cacheKey","cachedData","localStorage","getItem","entry","JSON","parse","now","Date","timestamp","removeItem","data","error","console","set","setItem","stringify","clear"],"sources":["C:/Users/ADAM/YT-adskip/YT-adskip-extension/src/utils/cache.ts"],"sourcesContent":["import { VideoData } from './useVideoData';\n\nconst CACHE_PREFIX = 'yt-adskip-cache-';\nconst CACHE_TTL = 24 * 60 * 60 * 1000; // 24 hours in milliseconds\n\ninterface CacheEntry {\n  data: VideoData;\n  timestamp: number;\n}\n\nexport const cacheService = {\n  get: (videoId: string): VideoData | null => {\n    try {\n      const cacheKey = CACHE_PREFIX + videoId;\n      const cachedData = localStorage.getItem(cacheKey);\n      \n      if (!cachedData) return null;\n      \n      const entry: CacheEntry = JSON.parse(cachedData);\n      const now = Date.now();\n      \n      // Check if cache is expired\n      if (now - entry.timestamp > CACHE_TTL) {\n        localStorage.removeItem(cacheKey);\n        return null;\n      }\n      \n      return entry.data;\n    } catch (error) {\n      console.error('Cache read error:', error);\n      return null;\n    }\n  },\n  \n  set: (videoId: string, data: VideoData): void => {\n    try {\n      const cacheKey = CACHE_PREFIX + videoId;\n      const entry: CacheEntry = {\n        data,\n        timestamp: Date.now(),\n      };\n      \n      localStorage.setItem(cacheKey, JSON.stringify(entry));\n    } catch (error) {\n      console.error('Cache write error:', error);\n    }\n  },\n  \n  clear: (videoId: string): void => {\n    try {\n      const cacheKey = CACHE_PREFIX + videoId;\n      localStorage.removeItem(cacheKey);\n    } catch (error) {\n      console.error('Cache clear error:', error);\n    }\n  },\n}; "],"mappings":"AAEA,MAAMA,YAAY,GAAG,kBAAkB;AACvC,MAAMC,SAAS,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;;AAOvC,OAAO,MAAMC,YAAY,GAAG;EAC1BC,GAAG,EAAGC,OAAe,IAAuB;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAGL,YAAY,GAAGI,OAAO;MACvC,MAAME,UAAU,GAAGC,YAAY,CAACC,OAAO,CAACH,QAAQ,CAAC;MAEjD,IAAI,CAACC,UAAU,EAAE,OAAO,IAAI;MAE5B,MAAMG,KAAiB,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;MAChD,MAAMM,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;;MAEtB;MACA,IAAIA,GAAG,GAAGH,KAAK,CAACK,SAAS,GAAGb,SAAS,EAAE;QACrCM,YAAY,CAACQ,UAAU,CAACV,QAAQ,CAAC;QACjC,OAAO,IAAI;MACb;MAEA,OAAOI,KAAK,CAACO,IAAI;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,OAAO,IAAI;IACb;EACF,CAAC;EAEDE,GAAG,EAAEA,CAACf,OAAe,EAAEY,IAAe,KAAW;IAC/C,IAAI;MACF,MAAMX,QAAQ,GAAGL,YAAY,GAAGI,OAAO;MACvC,MAAMK,KAAiB,GAAG;QACxBO,IAAI;QACJF,SAAS,EAAED,IAAI,CAACD,GAAG,CAAC;MACtB,CAAC;MAEDL,YAAY,CAACa,OAAO,CAACf,QAAQ,EAAEK,IAAI,CAACW,SAAS,CAACZ,KAAK,CAAC,CAAC;IACvD,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAEDK,KAAK,EAAGlB,OAAe,IAAW;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAGL,YAAY,GAAGI,OAAO;MACvCG,YAAY,CAACQ,UAAU,CAACV,QAAQ,CAAC;IACnC,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}