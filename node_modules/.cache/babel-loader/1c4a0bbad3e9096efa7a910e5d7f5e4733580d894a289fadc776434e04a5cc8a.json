{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADAM\\\\YT-adskip\\\\YT-adskip-extension\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Alert from '@mui/material/Alert';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport { SearchResults } from './components/SearchResults';\nimport { SearchBar } from './components/SearchBar';\nimport { AdMarker } from './components/AdMarker';\nimport { useVideoData } from './utils/useVideoData';\nimport { useThemeDetector } from './utils/useThemeDetector';\n\n// Add global declarations\n\n// Custom event interface for type safety\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [videoId, setVideoId] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [autoSkip, setAutoSkip] = useState(false);\n  const isYouTubeDark = useThemeDetector();\n  const theme = createTheme({\n    palette: {\n      mode: isYouTubeDark ? 'dark' : 'light',\n      primary: {\n        main: '#ff0000' // YouTube red\n      },\n      background: {\n        default: isYouTubeDark ? '#0f0f0f' : '#ffffff',\n        paper: isYouTubeDark ? '#272727' : '#ffffff'\n      }\n    }\n  });\n  const {\n    data,\n    loading,\n    error,\n    fetchData\n  } = useVideoData();\n  useEffect(() => {\n    // Get current tab's URL to extract video ID\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true\n    }, tabs => {\n      var _tabs$;\n      const url = ((_tabs$ = tabs[0]) === null || _tabs$ === void 0 ? void 0 : _tabs$.url) || '';\n      const urlParams = new URLSearchParams(new URL(url).search);\n      const id = urlParams.get('v');\n      if (id) {\n        setVideoId(id);\n        fetchData(id);\n      }\n    });\n  }, [fetchData]);\n\n  // Load saved auto-skip setting on component mount\n  useEffect(() => {\n    chrome.storage.sync.get(['autoSkipEnabled'], result => {\n      if (result.autoSkipEnabled !== undefined) {\n        setAutoSkip(!!result.autoSkipEnabled);\n      }\n    });\n  }, []);\n\n  // Save auto-skip setting when it changes\n  useEffect(() => {\n    chrome.storage.sync.set({\n      autoSkipEnabled: autoSkip\n    });\n  }, [autoSkip]);\n\n  // Update auto-skip setting in content script when changed\n  useEffect(() => {\n    if (videoId) {\n      chrome.tabs.query({\n        active: true,\n        currentWindow: true\n      }, tabs => {\n        var _tabs$2;\n        const tabId = (_tabs$2 = tabs[0]) === null || _tabs$2 === void 0 ? void 0 : _tabs$2.id;\n        if (tabId) {\n          chrome.scripting.executeScript({\n            target: {\n              tabId\n            },\n            func: shouldAutoSkip => {\n              window.ytAdSkipAutoSkip = shouldAutoSkip;\n\n              // Dispatch an event to notify any existing listeners\n              const event = new CustomEvent('yt-adskip-settings-changed', {\n                detail: {\n                  autoSkip: shouldAutoSkip\n                }\n              });\n              document.dispatchEvent(event);\n            },\n            args: [autoSkip]\n          });\n        }\n      });\n    }\n  }, [autoSkip, videoId]);\n  useEffect(() => {\n    if (videoId) {\n      chrome.tabs.query({\n        active: true,\n        currentWindow: true\n      }, tabs => {\n        var _tabs$3;\n        const tabId = (_tabs$3 = tabs[0]) === null || _tabs$3 === void 0 ? void 0 : _tabs$3.id;\n        if (tabId) {\n          // First inject the content script\n          chrome.scripting.executeScript({\n            target: {\n              tabId\n            },\n            files: ['content.js']\n          }).then(() => {\n            // Then send the auto-skip setting to the content script\n            chrome.tabs.sendMessage(tabId, {\n              action: 'setAutoSkip',\n              enabled: autoSkip\n            });\n          });\n        }\n      });\n    }\n  }, [autoSkip, videoId]);\n  useEffect(() => {\n    if (data !== null && data !== void 0 && data.adSegments && data.adSegments.length > 0) {\n      chrome.tabs.query({\n        active: true,\n        currentWindow: true\n      }, tabs => {\n        var _tabs$4;\n        const tabId = (_tabs$4 = tabs[0]) === null || _tabs$4 === void 0 ? void 0 : _tabs$4.id;\n        if (tabId) {\n          // First inject the content script\n          chrome.scripting.executeScript({\n            target: {\n              tabId\n            },\n            files: ['content.js']\n          }).then(() => {\n            // Send ad segments to content script\n            chrome.tabs.sendMessage(tabId, {\n              action: 'setAdSegments',\n              segments: data.adSegments\n            });\n\n            // Then inject the markers script with the ad segments data\n            chrome.scripting.executeScript({\n              target: {\n                tabId\n              },\n              func: (segments, shouldAutoSkip) => {\n                // Set auto-skip setting\n                window.ytAdSkipAutoSkip = shouldAutoSkip;\n\n                // Function to inject markers - keep it super lightweight\n                const injectMarkers = () => {\n                  // Only run when needed elements are available\n                  const markersContainer = document.querySelector('.ytp-timed-markers-container');\n                  const progressBar = document.querySelector('.ytp-progress-bar');\n                  if (!markersContainer || !progressBar) return;\n\n                  // Clean up existing markers\n                  document.querySelectorAll('.yt-adskip-marker').forEach(m => m.remove());\n\n                  // Get video duration\n                  const duration = Number(progressBar.getAttribute('aria-valuemax')) || 0;\n                  if (!duration) return;\n\n                  // Create markers efficiently with document fragment\n                  const fragment = document.createDocumentFragment();\n\n                  // Create markers\n                  segments.forEach(segment => {\n                    const marker = document.createElement('div');\n                    marker.className = 'yt-adskip-marker';\n\n                    // Calculate position\n                    const startPercent = segment.start / duration * 100;\n                    const endPercent = segment.end / duration * 100;\n                    const width = endPercent - startPercent;\n\n                    // Style the marker\n                    Object.assign(marker.style, {\n                      position: 'absolute',\n                      left: `${startPercent}%`,\n                      width: `${width}%`,\n                      height: '100%',\n                      backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                      pointerEvents: 'none'\n                    });\n                    fragment.appendChild(marker);\n                  });\n\n                  // Add all markers at once\n                  markersContainer.appendChild(fragment);\n                };\n\n                // Setup skip button (only once)\n                const setupSkipButton = () => {\n                  // Skip if already exists\n                  if (document.querySelector('.yt-adskip-button')) return null;\n                  const skipButton = document.createElement('button');\n                  skipButton.className = 'yt-adskip-button ytp-button';\n                  skipButton.textContent = 'Skip Ad Section';\n\n                  // Add to player\n                  const player = document.querySelector('.html5-video-player');\n                  if (!player) return null;\n                  player.appendChild(skipButton);\n\n                  // Lightweight check function that runs infrequently\n                  const video = document.querySelector('video');\n                  if (!video) return null;\n\n                  // Using a much less frequent approach to reduce CPU usage\n                  let timeoutId = null;\n                  const checkAdSegment = () => {\n                    const currentTime = video.currentTime;\n                    const activeSegment = segments.find(segment => currentTime >= segment.start && currentTime < segment.end);\n                    if (activeSegment) {\n                      // Get the latest auto-skip setting\n                      const currentAutoSkip = window.ytAdSkipAutoSkip;\n\n                      // If auto-skip is enabled, skip immediately\n                      if (currentAutoSkip) {\n                        video.currentTime = activeSegment.end;\n                        skipButton.style.display = 'none';\n                      } else {\n                        skipButton.style.display = 'block';\n                        skipButton.onclick = () => {\n                          video.currentTime = activeSegment.end;\n                          skipButton.style.display = 'none';\n                        };\n                      }\n                    } else {\n                      skipButton.style.display = 'none';\n                    }\n\n                    // Check again after 1 second\n                    timeoutId = window.setTimeout(checkAdSegment, 1000);\n                  };\n\n                  // Start checking\n                  timeoutId = window.setTimeout(checkAdSegment, 1000);\n\n                  // Listen for setting changes\n                  document.addEventListener('yt-adskip-settings-changed', () => {\n                    // Force immediate check after settings change\n                    if (timeoutId) {\n                      window.clearTimeout(timeoutId);\n                      timeoutId = window.setTimeout(checkAdSegment, 0);\n                    }\n                  });\n\n                  // Return cleanup function\n                  return () => {\n                    if (timeoutId) window.clearTimeout(timeoutId);\n                    if (skipButton) skipButton.remove();\n                  };\n                };\n\n                // Initial one-time setup\n                injectMarkers();\n                const cleanup = setupSkipButton();\n\n                // Light observer - only observes relevant elements \n                const setupObserver = () => {\n                  if (window.adSkipObserver) return;\n\n                  // Find containers\n                  const progressBar = document.querySelector('.ytp-progress-bar');\n                  if (!progressBar) return;\n\n                  // Only observe the progress bar\n                  window.adSkipObserver = new MutationObserver(() => {\n                    // Avoid excessive redraws by using setTimeout\n                    window.setTimeout(injectMarkers, 200);\n                  });\n\n                  // Very limited observer scope\n                  window.adSkipObserver.observe(progressBar, {\n                    attributes: true,\n                    attributeFilter: ['aria-valuemax', 'aria-valuenow']\n                  });\n                };\n\n                // Setup observer\n                setupObserver();\n\n                // Clean up when page unloads\n                window.addEventListener('beforeunload', () => {\n                  if (window.adSkipObserver) {\n                    window.adSkipObserver.disconnect();\n                    window.adSkipObserver = undefined;\n                  }\n                  if (cleanup) cleanup();\n                });\n              },\n              args: [data.adSegments, autoSkip]\n            });\n          });\n        }\n      });\n    }\n  }, [data === null || data === void 0 ? void 0 : data.adSegments, autoSkip]);\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n  const handleTimestampClick = timestamp => {\n    chrome.tabs.query({\n      active: true,\n      currentWindow: true\n    }, tabs => {\n      var _tabs$5;\n      const tabId = (_tabs$5 = tabs[0]) === null || _tabs$5 === void 0 ? void 0 : _tabs$5.id;\n      if (tabId) {\n        chrome.scripting.executeScript({\n          target: {\n            tabId\n          },\n          func: time => {\n            const video = document.querySelector('video');\n            if (video) {\n              video.currentTime = time;\n              video.play();\n            }\n          },\n          args: [timestamp]\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: 400,\n        minHeight: 500,\n        p: 2,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch,\n        disabled: loading || !videoId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          p: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this), data && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [data.adSegments && data.adSegments.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: autoSkip,\n              onChange: e => {\n                const newValue = e.target.checked;\n                setAutoSkip(newValue);\n\n                // Immediately notify content script about the change\n                chrome.tabs.query({\n                  active: true,\n                  currentWindow: true\n                }, tabs => {\n                  var _tabs$6;\n                  const tabId = (_tabs$6 = tabs[0]) === null || _tabs$6 === void 0 ? void 0 : _tabs$6.id;\n                  if (tabId) {\n                    chrome.tabs.sendMessage(tabId, {\n                      action: 'setAutoSkip',\n                      enabled: newValue\n                    });\n                  }\n                });\n              },\n              color: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 21\n            }, this),\n            label: \"Auto-skip ad segments\",\n            sx: {\n              mb: 1,\n              '& .MuiFormControlLabel-label': {\n                fontSize: '0.875rem'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AdMarker, {\n            adSegments: data.adSegments,\n            onTimestampClick: handleTimestampClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(SearchResults, {\n          transcript: data.transcript,\n          searchQuery: searchQuery,\n          onTimestampClick: handleTimestampClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"87FdIC0F+y267HLmZEkdYZ22mM4=\", false, function () {\n  return [useThemeDetector, useVideoData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ThemeProvider","createTheme","CssBaseline","Box","CircularProgress","Alert","FormControlLabel","Switch","SearchResults","SearchBar","AdMarker","useVideoData","useThemeDetector","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","videoId","setVideoId","searchQuery","setSearchQuery","autoSkip","setAutoSkip","isYouTubeDark","theme","palette","mode","primary","main","background","default","paper","data","loading","error","fetchData","chrome","tabs","query","active","currentWindow","_tabs$","url","urlParams","URLSearchParams","URL","search","id","get","storage","sync","result","autoSkipEnabled","undefined","set","_tabs$2","tabId","scripting","executeScript","target","func","shouldAutoSkip","window","ytAdSkipAutoSkip","event","CustomEvent","detail","document","dispatchEvent","args","_tabs$3","files","then","sendMessage","action","enabled","adSegments","length","_tabs$4","segments","injectMarkers","markersContainer","querySelector","progressBar","querySelectorAll","forEach","m","remove","duration","Number","getAttribute","fragment","createDocumentFragment","segment","marker","createElement","className","startPercent","start","endPercent","end","width","Object","assign","style","position","left","height","backgroundColor","pointerEvents","appendChild","setupSkipButton","skipButton","textContent","player","video","timeoutId","checkAdSegment","currentTime","activeSegment","find","currentAutoSkip","display","onclick","setTimeout","addEventListener","clearTimeout","cleanup","setupObserver","adSkipObserver","MutationObserver","observe","attributes","attributeFilter","disconnect","handleSearch","handleTimestampClick","timestamp","_tabs$5","time","play","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","minHeight","p","flexDirection","gap","onSearch","disabled","justifyContent","severity","control","checked","onChange","e","newValue","_tabs$6","color","label","mb","fontSize","onTimestampClick","transcript","_c","$RefreshReg$"],"sources":["C:/Users/ADAM/YT-adskip/YT-adskip-extension/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Alert from '@mui/material/Alert';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport { SearchResults } from './components/SearchResults';\nimport { SearchBar } from './components/SearchBar';\nimport { AdMarker } from './components/AdMarker';\nimport { useVideoData } from './utils/useVideoData';\nimport { useThemeDetector } from './utils/useThemeDetector';\nimport { AdSegment } from './utils/useVideoData';\n\n// Add global declarations\ndeclare global {\n  interface Window {\n    adSkipObserver?: MutationObserver;\n    ytAdSkipSetup?: boolean;\n    ytAdSkipContentLoaded?: boolean;\n    ytAdSkipAutoSkip?: boolean;\n  }\n}\n\n// Custom event interface for type safety\ninterface RefreshEvent extends CustomEvent {\n  detail: any;\n}\n\nconst App: React.FC = () => {\n  const [videoId, setVideoId] = useState<string>('');\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [autoSkip, setAutoSkip] = useState<boolean>(false);\n  const isYouTubeDark = useThemeDetector();\n  \n  const theme = createTheme({\n    palette: {\n      mode: isYouTubeDark ? 'dark' : 'light',\n      primary: {\n        main: '#ff0000', // YouTube red\n      },\n      background: {\n        default: isYouTubeDark ? '#0f0f0f' : '#ffffff',\n        paper: isYouTubeDark ? '#272727' : '#ffffff',\n      },\n    },\n  });\n\n  const {\n    data,\n    loading,\n    error,\n    fetchData\n  } = useVideoData();\n\n  useEffect(() => {\n    // Get current tab's URL to extract video ID\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      const url = tabs[0]?.url || '';\n      const urlParams = new URLSearchParams(new URL(url).search);\n      const id = urlParams.get('v');\n      if (id) {\n        setVideoId(id);\n        fetchData(id);\n      }\n    });\n  }, [fetchData]);\n\n  // Load saved auto-skip setting on component mount\n  useEffect(() => {\n    chrome.storage.sync.get(['autoSkipEnabled'], (result) => {\n      if (result.autoSkipEnabled !== undefined) {\n        setAutoSkip(!!result.autoSkipEnabled);\n      }\n    });\n  }, []);\n\n  // Save auto-skip setting when it changes\n  useEffect(() => {\n    chrome.storage.sync.set({ autoSkipEnabled: autoSkip });\n  }, [autoSkip]);\n\n  // Update auto-skip setting in content script when changed\n  useEffect(() => {\n    if (videoId) {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        const tabId = tabs[0]?.id;\n        if (tabId) {\n          chrome.scripting.executeScript({\n            target: { tabId },\n            func: (shouldAutoSkip: boolean) => {\n              window.ytAdSkipAutoSkip = shouldAutoSkip;\n              \n              // Dispatch an event to notify any existing listeners\n              const event = new CustomEvent('yt-adskip-settings-changed', { \n                detail: { autoSkip: shouldAutoSkip } \n              });\n              document.dispatchEvent(event);\n            },\n            args: [autoSkip]\n          });\n        }\n      });\n    }\n  }, [autoSkip, videoId]);\n\n  useEffect(() => {\n    if (videoId) {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        const tabId = tabs[0]?.id;\n        if (tabId) {\n          // First inject the content script\n          chrome.scripting.executeScript({\n            target: { tabId },\n            files: ['content.js']\n          }).then(() => {\n            // Then send the auto-skip setting to the content script\n            chrome.tabs.sendMessage(tabId, {\n              action: 'setAutoSkip',\n              enabled: autoSkip\n            });\n          });\n        }\n      });\n    }\n  }, [autoSkip, videoId]);\n\n  useEffect(() => {\n    if (data?.adSegments && data.adSegments.length > 0) {\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        const tabId = tabs[0]?.id;\n        if (tabId) {\n          // First inject the content script\n          chrome.scripting.executeScript({\n            target: { tabId },\n            files: ['content.js']\n          }).then(() => {\n            // Send ad segments to content script\n            chrome.tabs.sendMessage(tabId, {\n              action: 'setAdSegments',\n              segments: data.adSegments\n            });\n            \n            // Then inject the markers script with the ad segments data\n            chrome.scripting.executeScript({\n              target: { tabId },\n              func: (segments: AdSegment[], shouldAutoSkip: boolean) => {\n                // Set auto-skip setting\n                window.ytAdSkipAutoSkip = shouldAutoSkip;\n                \n                // Function to inject markers - keep it super lightweight\n                const injectMarkers = () => {\n                  // Only run when needed elements are available\n                  const markersContainer = document.querySelector('.ytp-timed-markers-container');\n                  const progressBar = document.querySelector('.ytp-progress-bar');\n                  if (!markersContainer || !progressBar) return;\n                  \n                  // Clean up existing markers\n                  document.querySelectorAll('.yt-adskip-marker').forEach(m => m.remove());\n                  \n                  // Get video duration\n                  const duration = Number(progressBar.getAttribute('aria-valuemax')) || 0;\n                  if (!duration) return;\n                  \n                  // Create markers efficiently with document fragment\n                  const fragment = document.createDocumentFragment();\n                  \n                  // Create markers\n                  segments.forEach((segment: AdSegment) => {\n                    const marker = document.createElement('div');\n                    marker.className = 'yt-adskip-marker';\n                    \n                    // Calculate position\n                    const startPercent = (segment.start / duration) * 100;\n                    const endPercent = (segment.end / duration) * 100;\n                    const width = endPercent - startPercent;\n                    \n                    // Style the marker\n                    Object.assign(marker.style, {\n                      position: 'absolute',\n                      left: `${startPercent}%`,\n                      width: `${width}%`,\n                      height: '100%',\n                      backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                      pointerEvents: 'none'\n                    });\n                    \n                    fragment.appendChild(marker);\n                  });\n                  \n                  // Add all markers at once\n                  markersContainer.appendChild(fragment);\n                };\n                \n                // Setup skip button (only once)\n                const setupSkipButton = () => {\n                  // Skip if already exists\n                  if (document.querySelector('.yt-adskip-button')) return null;\n                  \n                  const skipButton = document.createElement('button');\n                  skipButton.className = 'yt-adskip-button ytp-button';\n                  skipButton.textContent = 'Skip Ad Section';\n                  \n                  // Add to player\n                  const player = document.querySelector('.html5-video-player');\n                  if (!player) return null;\n                  player.appendChild(skipButton);\n                  \n                  // Lightweight check function that runs infrequently\n                  const video = document.querySelector('video');\n                  if (!video) return null;\n                  \n                  // Using a much less frequent approach to reduce CPU usage\n                  let timeoutId: number | null = null;\n                  \n                  const checkAdSegment = () => {\n                    const currentTime = video.currentTime;\n                    const activeSegment = segments.find(\n                      (segment: AdSegment) => currentTime >= segment.start && currentTime < segment.end\n                    );\n\n                    if (activeSegment) {\n                      // Get the latest auto-skip setting\n                      const currentAutoSkip = window.ytAdSkipAutoSkip;\n                      \n                      // If auto-skip is enabled, skip immediately\n                      if (currentAutoSkip) {\n                        video.currentTime = activeSegment.end;\n                        skipButton.style.display = 'none';\n                      } else {\n                        skipButton.style.display = 'block';\n                        skipButton.onclick = () => {\n                          video.currentTime = activeSegment.end;\n                          skipButton.style.display = 'none';\n                        };\n                      }\n                    } else {\n                      skipButton.style.display = 'none';\n                    }\n                    \n                    // Check again after 1 second\n                    timeoutId = window.setTimeout(checkAdSegment, 1000);\n                  };\n                  \n                  // Start checking\n                  timeoutId = window.setTimeout(checkAdSegment, 1000);\n                  \n                  // Listen for setting changes\n                  document.addEventListener('yt-adskip-settings-changed', () => {\n                    // Force immediate check after settings change\n                    if (timeoutId) {\n                      window.clearTimeout(timeoutId);\n                      timeoutId = window.setTimeout(checkAdSegment, 0);\n                    }\n                  });\n                  \n                  // Return cleanup function\n                  return () => {\n                    if (timeoutId) window.clearTimeout(timeoutId);\n                    if (skipButton) skipButton.remove();\n                  };\n                };\n                \n                // Initial one-time setup\n                injectMarkers();\n                const cleanup = setupSkipButton();\n                \n                // Light observer - only observes relevant elements \n                const setupObserver = () => {\n                  if (window.adSkipObserver) return;\n                  \n                  // Find containers\n                  const progressBar = document.querySelector('.ytp-progress-bar');\n                  if (!progressBar) return;\n                  \n                  // Only observe the progress bar\n                  window.adSkipObserver = new MutationObserver(() => {\n                    // Avoid excessive redraws by using setTimeout\n                    window.setTimeout(injectMarkers, 200);\n                  });\n                  \n                  // Very limited observer scope\n                  window.adSkipObserver.observe(progressBar, {\n                    attributes: true,\n                    attributeFilter: ['aria-valuemax', 'aria-valuenow']\n                  });\n                };\n                \n                // Setup observer\n                setupObserver();\n                \n                // Clean up when page unloads\n                window.addEventListener('beforeunload', () => {\n                  if (window.adSkipObserver) {\n                    window.adSkipObserver.disconnect();\n                    window.adSkipObserver = undefined;\n                  }\n                  if (cleanup) cleanup();\n                });\n              },\n              args: [data.adSegments, autoSkip]\n            });\n          });\n        }\n      });\n    }\n  }, [data?.adSegments, autoSkip]);\n\n  const handleSearch = (query: string) => {\n    setSearchQuery(query);\n  };\n\n  const handleTimestampClick = (timestamp: number) => {\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      const tabId = tabs[0]?.id;\n      if (tabId) {\n        chrome.scripting.executeScript({\n          target: { tabId },\n          func: (time) => {\n            const video = document.querySelector('video');\n            if (video) {\n              video.currentTime = time;\n              video.play();\n            }\n          },\n          args: [timestamp]\n        });\n      }\n    });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box sx={{ \n        width: 400, \n        minHeight: 500,\n        p: 2,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2\n      }}>\n        <SearchBar \n          onSearch={handleSearch}\n          disabled={loading || !videoId}\n        />\n        \n        {loading && (\n          <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n            <CircularProgress />\n          </Box>\n        )}\n\n        {error && (\n          <Alert severity=\"error\">\n            {error}\n          </Alert>\n        )}\n\n        {data && (\n          <>\n            {data.adSegments && data.adSegments.length > 0 && (\n              <>\n                <FormControlLabel\n                  control={\n                    <Switch \n                      checked={autoSkip}\n                      onChange={(e) => {\n                        const newValue = e.target.checked;\n                        setAutoSkip(newValue);\n                        \n                        // Immediately notify content script about the change\n                        chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n                          const tabId = tabs[0]?.id;\n                          if (tabId) {\n                            chrome.tabs.sendMessage(tabId, {\n                              action: 'setAutoSkip',\n                              enabled: newValue\n                            });\n                          }\n                        });\n                      }}\n                      color=\"error\"\n                    />\n                  }\n                  label=\"Auto-skip ad segments\"\n                  sx={{ \n                    mb: 1,\n                    '& .MuiFormControlLabel-label': {\n                      fontSize: '0.875rem'\n                    }\n                  }}\n                />\n                <AdMarker \n                  adSegments={data.adSegments}\n                  onTimestampClick={handleTimestampClick}\n                />\n              </>\n            )}\n            \n            <SearchResults \n              transcript={data.transcript}\n              searchQuery={searchQuery}\n              onTimestampClick={handleTimestampClick}\n            />\n          </>\n        )}\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}