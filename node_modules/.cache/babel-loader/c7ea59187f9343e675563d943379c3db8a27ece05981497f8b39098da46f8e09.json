{"ast":null,"code":"const CACHE_PREFIX='yt-adskip-cache-';const CACHE_TTL=24*60*60*1000;// 24 hours in milliseconds\nexport const cacheService={get:videoId=>{try{const cacheKey=CACHE_PREFIX+videoId;const cachedData=localStorage.getItem(cacheKey);if(!cachedData)return null;const entry=JSON.parse(cachedData);const now=Date.now();// Check if cache is expired\nif(now-entry.timestamp>CACHE_TTL){localStorage.removeItem(cacheKey);return null;}return entry.data;}catch(error){console.error('Cache read error:',error);return null;}},set:(videoId,data)=>{try{const cacheKey=CACHE_PREFIX+videoId;const entry={data,timestamp:Date.now()};localStorage.setItem(cacheKey,JSON.stringify(entry));}catch(error){console.error('Cache write error:',error);}},clear:videoId=>{try{const cacheKey=CACHE_PREFIX+videoId;localStorage.removeItem(cacheKey);}catch(error){console.error('Cache clear error:',error);}}};","map":{"version":3,"names":["CACHE_PREFIX","CACHE_TTL","cacheService","get","videoId","cacheKey","cachedData","localStorage","getItem","entry","JSON","parse","now","Date","timestamp","removeItem","data","error","console","set","setItem","stringify","clear"],"sources":["C:/Users/ADAM/YT-adskip/YT-adskip-extension/src/utils/cache.ts"],"sourcesContent":["import { VideoData } from './useVideoData';\n\nconst CACHE_PREFIX = 'yt-adskip-cache-';\nconst CACHE_TTL = 24 * 60 * 60 * 1000; // 24 hours in milliseconds\n\ninterface CacheEntry {\n  data: VideoData;\n  timestamp: number;\n}\n\nexport const cacheService = {\n  get: (videoId: string): VideoData | null => {\n    try {\n      const cacheKey = CACHE_PREFIX + videoId;\n      const cachedData = localStorage.getItem(cacheKey);\n      \n      if (!cachedData) return null;\n      \n      const entry: CacheEntry = JSON.parse(cachedData);\n      const now = Date.now();\n      \n      // Check if cache is expired\n      if (now - entry.timestamp > CACHE_TTL) {\n        localStorage.removeItem(cacheKey);\n        return null;\n      }\n      \n      return entry.data;\n    } catch (error) {\n      console.error('Cache read error:', error);\n      return null;\n    }\n  },\n  \n  set: (videoId: string, data: VideoData): void => {\n    try {\n      const cacheKey = CACHE_PREFIX + videoId;\n      const entry: CacheEntry = {\n        data,\n        timestamp: Date.now(),\n      };\n      \n      localStorage.setItem(cacheKey, JSON.stringify(entry));\n    } catch (error) {\n      console.error('Cache write error:', error);\n    }\n  },\n  \n  clear: (videoId: string): void => {\n    try {\n      const cacheKey = CACHE_PREFIX + videoId;\n      localStorage.removeItem(cacheKey);\n    } catch (error) {\n      console.error('Cache clear error:', error);\n    }\n  },\n}; "],"mappings":"AAEA,KAAM,CAAAA,YAAY,CAAG,kBAAkB,CACvC,KAAM,CAAAC,SAAS,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAG,IAAI,CAAE;AAOvC,MAAO,MAAM,CAAAC,YAAY,CAAG,CAC1BC,GAAG,CAAGC,OAAe,EAAuB,CAC1C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAGL,YAAY,CAAGI,OAAO,CACvC,KAAM,CAAAE,UAAU,CAAGC,YAAY,CAACC,OAAO,CAACH,QAAQ,CAAC,CAEjD,GAAI,CAACC,UAAU,CAAE,MAAO,KAAI,CAE5B,KAAM,CAAAG,KAAiB,CAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CAChD,KAAM,CAAAM,GAAG,CAAGC,IAAI,CAACD,GAAG,CAAC,CAAC,CAEtB;AACA,GAAIA,GAAG,CAAGH,KAAK,CAACK,SAAS,CAAGb,SAAS,CAAE,CACrCM,YAAY,CAACQ,UAAU,CAACV,QAAQ,CAAC,CACjC,MAAO,KAAI,CACb,CAEA,MAAO,CAAAI,KAAK,CAACO,IAAI,CACnB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,CACzC,MAAO,KAAI,CACb,CACF,CAAC,CAEDE,GAAG,CAAEA,CAACf,OAAe,CAAEY,IAAe,GAAW,CAC/C,GAAI,CACF,KAAM,CAAAX,QAAQ,CAAGL,YAAY,CAAGI,OAAO,CACvC,KAAM,CAAAK,KAAiB,CAAG,CACxBO,IAAI,CACJF,SAAS,CAAED,IAAI,CAACD,GAAG,CAAC,CACtB,CAAC,CAEDL,YAAY,CAACa,OAAO,CAACf,QAAQ,CAAEK,IAAI,CAACW,SAAS,CAACZ,KAAK,CAAC,CAAC,CACvD,CAAE,MAAOQ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC5C,CACF,CAAC,CAEDK,KAAK,CAAGlB,OAAe,EAAW,CAChC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAGL,YAAY,CAAGI,OAAO,CACvCG,YAAY,CAACQ,UAAU,CAACV,QAAQ,CAAC,CACnC,CAAE,MAAOY,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC5C,CACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}