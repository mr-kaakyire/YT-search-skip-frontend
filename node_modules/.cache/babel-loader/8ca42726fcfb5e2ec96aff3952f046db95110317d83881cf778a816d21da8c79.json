{"ast":null,"code":"import{useState}from'react';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:3000';export const useVideoData=()=>{const[data,setData]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const fetchData=async videoId=>{try{setLoading(true);setError(null);const response=await fetch(`${API_URL}/analyze-video`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({videoUrl:`https://www.youtube.com/watch?v=${videoId}`})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||'Failed to fetch video data');}const result=await response.json();setData(result);}catch(err){setError(err instanceof Error?err.message:'An unexpected error occurred');setData(null);}finally{setLoading(false);}};return{data,loading,error,fetchData};};","map":{"version":3,"names":["useState","API_URL","process","env","REACT_APP_API_URL","useVideoData","data","setData","loading","setLoading","error","setError","fetchData","videoId","response","fetch","method","headers","body","JSON","stringify","videoUrl","ok","errorData","json","Error","result","err","message"],"sources":["C:/Users/ADAM/YT-adskip/YT-adskip-extension/src/utils/useVideoData.ts"],"sourcesContent":["import { useState } from 'react';\r\n\r\ninterface TranscriptSegment {\r\n  text: string;\r\n  offset: number;\r\n}\r\n\r\ninterface AdSegment {\r\n  start: number;\r\n  end: number;\r\n  text: string;\r\n}\r\n\r\ninterface VideoData {\r\n  transcript: TranscriptSegment[];\r\n  adSegments: AdSegment[];\r\n}\r\n\r\ninterface UseVideoDataReturn {\r\n  data: VideoData | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  fetchData: (videoId: string) => Promise<void>;\r\n}\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\r\n\r\nexport const useVideoData = (): UseVideoDataReturn => {\r\n  const [data, setData] = useState<VideoData | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const fetchData = async (videoId: string) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch(`${API_URL}/analyze-video`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          videoUrl: `https://www.youtube.com/watch?v=${videoId}`,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Failed to fetch video data');\r\n      }\r\n\r\n      const result = await response.json();\r\n      setData(result);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An unexpected error occurred');\r\n      setData(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    data,\r\n    loading,\r\n    error,\r\n    fetchData,\r\n  };\r\n}; "],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAyBhC,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CAExE,MAAO,MAAM,CAAAC,YAAY,CAAGA,CAAA,GAA0B,CACpD,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGP,QAAQ,CAAmB,IAAI,CAAC,CACxD,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAgB,IAAI,CAAC,CAEvD,KAAM,CAAAY,SAAS,CAAG,KAAO,CAAAC,OAAe,EAAK,CAC3C,GAAI,CACFJ,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAEd,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGd,OAAO,gBAAgB,CAAE,CACvDe,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,QAAQ,CAAE,mCAAmCR,OAAO,EACtD,CAAC,CACH,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACQ,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAC,KAAK,CAACF,SAAS,CAACb,KAAK,EAAI,4BAA4B,CAAC,CAClE,CAEA,KAAM,CAAAgB,MAAM,CAAG,KAAM,CAAAZ,QAAQ,CAACU,IAAI,CAAC,CAAC,CACpCjB,OAAO,CAACmB,MAAM,CAAC,CACjB,CAAE,MAAOC,GAAG,CAAE,CACZhB,QAAQ,CAACgB,GAAG,WAAY,CAAAF,KAAK,CAAGE,GAAG,CAACC,OAAO,CAAG,8BAA8B,CAAC,CAC7ErB,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,OAAS,CACRE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,MAAO,CACLH,IAAI,CACJE,OAAO,CACPE,KAAK,CACLE,SACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}